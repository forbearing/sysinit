1:编辑另一个文件
	:e{dit} foo.txt
	:e{dit}! foo.txt
	:hide edit foo.txt

2:文件列表
	vim one.txt two.txt free.txt
	:next					编辑下一个文件
	:next!					强制编辑下一个文件,不保存当前正在编辑的文件
	:wnext					保存当前编辑的文件,并编辑下一个文件
	:previous				编辑上一个文件
	:previous!				强制编辑上一个文件,不保存当前正在编辑的文件
	:wprevious				保存当前编辑的文件,并编辑上一个文件
	:args					查看正在编辑的文件列表
	:last					直接编辑最后一个文件
	:first					直接编辑第一个文件
	:2next					往后移动两个文件编辑
	:set autowrite			自动保存
	:set noautowrite		取消自动保存
	:args 1.txt 2.txt 3.txt	直接编辑另一个文件列表
	:args*.txt				直接编辑当前路径下所有后缀名为 txt 的文件

3:通过文件标记在文件间跳转
	CTRL-^		在两个文件之间跳转
	50%mJ		全局文件标记(一直被记住,知道被重新定义)
	:marks		查看标记列表
	:marks V	查看某个标记
	:marks VMJ	查看多个标记
	CTRL-O/CTRL-I	在跳转序列中跳转

4:备份文件
	:set backup		备份文件(在原生文件后面加上~)
	:set backupext=.bak		指定备份文件后缀名
		如果'backup'没有置位,而'writebackup'选项置了位,VIM还是会
		创建备份文件,但是在文件编辑完后,这个备份文件会被自动删除
	:set patchmode=.orig	保留原始文件

5:利用寄存器记下来拷贝
	"fyas			拷贝一个句子进寄存器f
	"l3Y			拷贝3行到寄存器l
	CTRL-Vjjww"by	拷贝一个文本块进寄存器b
	"fp				黏贴寄存器中的数据
	:write >> file.txt	追加文本

6:只读模式编辑文本
	vim -R file		只读模式,编辑之后可以强制保存退出
	view file		只读模式,等同于 vim -R , 可以编辑完后强制退出
	vim -M file		禁止模式,禁止模式下,不可以编辑保存
		set modifiable
		set write	如果需要在禁止模式下编辑文件,必须设置这两项

7:另存为
	:saveas file	另存为一个新的文件,源文件保持不变
	:file file
