10.1: 记录与回放命令
	1:
		开始记录 q{n}				# n为寄存器
		技术记录 q
		执行记录 {count}@n		# n为寄存器
		@@						# @a --> @b
	2: 只有26个寄存器,, "."只能记住有且是最后一次操作
	3:用来记录和拷贝的寄存器是相同的
	4:"qC"命令可以对c寄存器追加记录
		记录到一个大写寄存器表示附加命令到对应的小写寄存器
10.2: 替换
	:%s/old/new/g
		g(global):全局起作用
		p(print):命令执行的时候打印出最后一个被修改的行
		c(confirm):在每次替换前询问
10.3: 命令范围
	1:
		.		表示当前行
		$		表示最后一行
		%		全部行
		+/-n	相对于当前行移动n行
		{count}n	只针对某一行
		:?^Chapter?,/^Chapter/s=grey=gray=g
	2:使用标记
		1:标签使用 m{counter},, 标签跳转 '{counter}
		2:除了指定行号,还可以使用标记
			:'{counter},'{couner}
			:'f,'t
	3:可视模式和范围:
10.4: global命令
	:[range]global/{pattern}/{command}
	1:有点向替换明星"s",但是global不是替换文本,而是执行命令
10.5: 可视列块模式
	1:有3中可视方式:
		v
		V
		<C-V>
	2:可是模式下可以进行删除(w,c),转换大小写(~,U,u),替换(u),平移(<,>)
		("平移单位"由shiftwidth决定),连接(J,gJ)
10.6: 读,写部分文件内容
	1:read命令支持前缀
		:$read file			# 把file中的文件插入到文件结尾
		:0read file			# 开头
	2:write:
		3,28w file
		.,$w! file			# 强制写入到一个已经存有内容的文件
		3,28w >> file
10.7: 排版文本
	1:设置自动换行:
		:set textwidth=72
	2:排版当前段落:
		gqap				# gq作为操作符, ap(a paragraph)作为对象
		gggqG				# 排版整个文档
		gqj
		gq(
		gq[
		gq{
10.8: 改变大小写
	1:guu				# 整行小写
	2:gUU/g~~			# 整行大写
	3:guw
	4:gu()
	5:gu[]
	6:gu{}
	7:guG
10.9: 使用外部程序
	1:
		!{moption}{program}
		!5Gsort				# 处理前5行数据
		!!data				# 处理当前行数据,data命令结果代替当前行
	2:
		读取一个命令的输出
	3:重画屏幕:
		CTRL-L
